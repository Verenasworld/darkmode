{"version":3,"sources":["Components/SplashScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Toggle","styled","button","props","theme","titleColor","pageBackground","Page","div","Container","Title","h1","TagLine","span","tagLineColor","SociIcon","a","iconColor","Splash","icon","size","onClick","setTheme","themes","light","dark","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qxCAMA,IAAMA,EAASC,IAAOC,OAAV,KAMY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAChC,SAAAF,GAAK,OAAIA,EAAMC,MAAME,kBAO5BC,EAAON,IAAOO,IAAV,KAMY,SAAAL,GAAK,OAAIA,EAAMC,MAAME,kBAIrCG,EAAYR,IAAOO,IAAV,KAMTE,EAAQT,IAAOU,GAAV,KACE,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,cAI5BO,EAAUX,IAAOY,KAAV,KACA,SAAAV,GAAK,OAAIA,EAAMC,MAAMU,gBAM5BC,EAAWd,IAAOe,EAAV,KAED,SAAAb,GAAK,OAAIA,EAAMC,MAAMa,aA8BnBC,MA3Bf,SAAgBf,GASZ,IAAMgB,EAAuB,UAAhBhB,EAAMC,MAAoB,cAAC,IAAD,CAAQgB,KAAM,KAAS,cAAC,IAAD,CAAOA,KAAM,KAE3E,OACI,cAACb,EAAD,UACI,eAACE,EAAD,WACI,cAACT,EAAD,CAAQqB,QAbpB,WACwB,UAAhBlB,EAAMC,MACND,EAAMmB,SAAS,QAEfnB,EAAMmB,SAAS,UASX,SACGH,IAEH,cAACT,EAAD,yBACA,cAACE,EAAD,iCACA,eAACG,EAAD,eAAW,cAAC,IAAD,IAAX,KAA0B,cAAC,IAAD,IAA1B,IAA6C,cAAC,IAAD,aCrDvDQ,EAAS,CACbC,MAfiB,CACjBlB,eAAgB,QAChBD,WAAY,UACZS,aAAc,QACdG,UAAW,WAYXQ,KATgB,CAChBnB,eAAgB,UAChBD,WAAY,UACZS,aAAc,WACdG,UAAW,UAkBES,MATf,WAAgB,IAAD,EACaC,mBAAS,SADtB,mBACNvB,EADM,KACCkB,EADD,KAEb,OACI,cAAC,IAAD,CAAelB,MAAOmB,EAAOnB,GAA7B,SACE,cAAC,EAAD,CAAQA,MAAOA,EAAOkB,SAAUA,OCjBzBM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b7d9492.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { CgSun } from \"react-icons/cg\";\r\nimport { HiMoon } from \"react-icons/hi\";\r\nimport {AiFillFacebook, AiFillHome, AiFillInstagram} from \"react-icons/all\";\r\nimport \"./SplashScreen.css\";\r\n\r\nconst Toggle = styled.button`\r\n    cursor: pointer;\r\n    height: 50px;\r\n    width: 50px;   \r\n    border-radius: 50%;\r\n    border: none;\r\n    background-color: ${props => props.theme.titleColor};\r\n    color: ${props => props.theme.pageBackground};\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n    transition: all .7s ease;\r\n`;\r\n\r\nconst Page = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background-color: ${props => props.theme.pageBackground};\r\n  transition: all .7s ease;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    color: ${props => props.theme.titleColor};\r\n    transition: all .7s ease;\r\n`;\r\n\r\nconst TagLine = styled.span`\r\n    color: ${props => props.theme.tagLineColor};\r\n    font-size: 18px;\r\n    transition: all .7s ease;\r\n`;\r\n\r\n\r\nconst SociIcon = styled.a`\r\n    font-size: 50px;\r\n    color: ${props => props.theme.iconColor}; \r\n`;\r\n\r\nfunction Splash(props) {\r\n    function changeTheme() {\r\n        if (props.theme === \"light\") {\r\n            props.setTheme(\"dark\");\r\n        } else {\r\n            props.setTheme(\"light\");\r\n        }\r\n    };\r\n\r\n    const icon = props.theme === \"light\" ? <HiMoon size={40} /> : <CgSun size={40} />;\r\n\r\n    return (\r\n        <Page>\r\n            <Container>\r\n                <Toggle onClick={changeTheme}>\r\n                  {icon}\r\n                </Toggle>\r\n                <Title>MyWebProfi</Title>\r\n                <TagLine>www.mywebprofi.net</TagLine>\r\n                <SociIcon> <AiFillHome/>  <AiFillInstagram/> <AiFillFacebook/>\r\n                </SociIcon>\r\n\r\n            </Container>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default Splash;","\nimport { useState } from \"react\";\nimport Splash from \"./Components/SplashScreen\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst LightTheme = {\n  pageBackground: \"white\",\n  titleColor: \"#43A9BA\",\n  tagLineColor: \"black\",\n  iconColor: \"#43A9BA\"\n};\n\nconst DarkTheme = {\n  pageBackground: \"#282c36\",\n  titleColor: \"#79d3e2\",\n  tagLineColor: \"lavender\",\n  iconColor: \"white\",\n}\n\nconst themes = {\n  light: LightTheme,\n  dark: DarkTheme,\n}\n\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\")\n  return (\n      <ThemeProvider theme={themes[theme]}>\n        <Splash theme={theme} setTheme={setTheme} />\n      </ThemeProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}